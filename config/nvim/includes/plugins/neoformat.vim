" Neoformat formats file
" https://github.com/sbdchd/neoformat
" Neoformat will reformat code using external formatters. It is similar to Ale
" fix system, but both do not support the same tools. The rule of thumb is that
" Ale fix should be configured in priority, and if Ale does not support a tool,
" then I will enable it on Neoformat.
"
" Note: Supported formatters:
" https://github.com/sbdchd/neoformat#supported-filetypes

" By default, Neoformat enables itself for all filetypes, based on available
" tools. I'm taking a more conservative approach, disabling it for all languages
" and only enabling it on specific ones.
" The list of available formatters can be found here:
" https://github.com/sbdchd/neoformat/tree/master/autoload/neoformat/formatters
let g:neoformat_enabled_arduino         = []
let g:neoformat_enabled_asm             = []
let g:neoformat_enabled_astro           = []
let g:neoformat_enabled_beancount       = []
let g:neoformat_enabled_bib             = []
let g:neoformat_enabled_blade           = []
let g:neoformat_enabled_bzl             = []
let g:neoformat_enabled_cabal           = []
let g:neoformat_enabled_caddyfile       = []
let g:neoformat_enabled_cmake           = []
let g:neoformat_enabled_cpp             = []
let g:neoformat_enabled_crystal         = []
let g:neoformat_enabled_css             = []
let g:neoformat_enabled_csv             = []
let g:neoformat_enabled_cs              = []
let g:neoformat_enabled_cue             = []
let g:neoformat_enabled_c               = []
let g:neoformat_enabled_d2              = []
let g:neoformat_enabled_dart            = []
let g:neoformat_enabled_dhall           = []
let g:neoformat_enabled_dune            = []
let g:neoformat_enabled_d               = []
let g:neoformat_enabled_ebuild          = []
let g:neoformat_enabled_elixir          = []
let g:neoformat_enabled_elm             = []
let g:neoformat_enabled_erlang          = []
let g:neoformat_enabled_fennel          = []
let g:neoformat_enabled_fish            = []
let g:neoformat_enabled_fortran         = []
let g:neoformat_enabled_fsharp          = []
let g:neoformat_enabled_gdscript        = []
let g:neoformat_enabled_gleam           = []
let g:neoformat_enabled_glsl            = []
let g:neoformat_enabled_gn              = []
let g:neoformat_enabled_go              = []
let g:neoformat_enabled_graphql         = []
let g:neoformat_enabled_haskell         = []
let g:neoformat_enabled_htmldjango      = []
let g:neoformat_enabled_html            = []
let g:neoformat_enabled_jade            = []
let g:neoformat_enabled_javascriptreact = []
let g:neoformat_enabled_javascript      = []
let g:neoformat_enabled_java            = []
let g:neoformat_enabled_jinja           = []
let g:neoformat_enabled_jsonc           = []
let g:neoformat_enabled_json            = []
let g:neoformat_enabled_kotlin          = []
let g:neoformat_enabled_less            = []
let g:neoformat_enabled_lua             = []
let g:neoformat_enabled_markdown        = []
let g:neoformat_enabled_matlab          = []
let g:neoformat_enabled_nginx           = []
let g:neoformat_enabled_nim             = []
let g:neoformat_enabled_nix             = []
let g:neoformat_enabled_objc            = []
let g:neoformat_enabled_ocaml           = []
let g:neoformat_enabled_opencl          = []
let g:neoformat_enabled_pandoc          = []
let g:neoformat_enabled_pawn            = []
let g:neoformat_enabled_perl            = []
let g:neoformat_enabled_php             = []
let g:neoformat_enabled_prisma          = []
let g:neoformat_enabled_proto           = []
let g:neoformat_enabled_ps1             = []
let g:neoformat_enabled_pug             = []
let g:neoformat_enabled_puppet          = []
let g:neoformat_enabled_purescript      = []
let g:neoformat_enabled_python          = []
let g:neoformat_enabled_reason          = []
let g:neoformat_enabled_ruby            = []
let g:neoformat_enabled_rust            = []
let g:neoformat_enabled_r               = []
let g:neoformat_enabled_sass            = []
let g:neoformat_enabled_sbt             = []
let g:neoformat_enabled_scala           = []
let g:neoformat_enabled_scss            = []
let g:neoformat_enabled_sh              = []
let g:neoformat_enabled_solidity        = []
let g:neoformat_enabled_sql             = []
let g:neoformat_enabled_starlark        = []
let g:neoformat_enabled_svelte          = []
let g:neoformat_enabled_swift           = []
let g:neoformat_enabled_systemverilog   = []
let g:neoformat_enabled_terraform       = []
let g:neoformat_enabled_tex             = []
let g:neoformat_enabled_tf              = []
let g:neoformat_enabled_toml            = []
let g:neoformat_enabled_typescriptreact = []
let g:neoformat_enabled_typescript      = []
let g:neoformat_enabled_vala            = []
let g:neoformat_enabled_verilog         = []
let g:neoformat_enabled_vue             = []
let g:neoformat_enabled_v               = []
let g:neoformat_enabled_xhtml           = []
let g:neoformat_enabled_xml             = []
let g:neoformat_enabled_yaml            = []
let g:neoformat_enabled_zig             = []
let g:neoformat_enabled_zsh             = ['shfmt']


" Disable automatic "fixing", as it's too language-dependent, I'd rather use
" a specific tool per language.
let g:neoformat_basic_format_retab = 0 " Convert tabs to space
let g:neoformat_basic_format_trim  = 0 " Trim trailing whitespaces

let g:shfmt_opt='-ci' " Options for shfmt
