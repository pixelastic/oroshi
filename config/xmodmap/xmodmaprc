! Notes:
!   Each physical (plastic) key on a keyboard has its own keycode, a number
!   between 1 and 255. Some keycode will be shared accross various types of
!   keyboards while other might change (think azerty/qwerty differences,
!   Windows or Mac special keys and multimedia keyboards)
!
!   Most of the keycodes are directly linked to a characters (a-z). Some other
!   do not print anything at all (F1-F12) while others acts as modifiers.
!   A modifier does not print anything either but change the meaning of
!   another key pressed at the same time (think of Shift for capital letters)
!
!   Xmodmap uses an inner representation of these keys, using keysyms. We can
!   bind a specific keycode (for example 36) to a specific keysym (for example
!   the <Return> action).
!
!   There is a maximum of 8 different modifiers that can be applied to a key.
!   Those modifiers are passed, along with the key, to the underlying software
!   that can react accordingly.
!
!   Several modifiers can be send at the same time, but there is usually no
!   more than 2 at the same time.
!   The 3 more common modifiers are : Shift, Control and Lock.
!     Shift is used to make the next char uppercase
!     Control is used to bind some keyboard shortcuts
!     Lock is pressed once and all subsequent chars are uppercased
!   There are 5 more modifiers available, named mod1-5. They are not as widely
!   supported as the first 3 so there is no real standard on what they should
!   do, but the common practice is as follow :
!     Mod1 is usually used as the "Alt" modifier key
!     Mod2 is usually used as a Lock on the Numeric keyboard
!     Mod3 is almost never used
!     Mod4 is usually the "Meta" (Windows) key
!     Mod5 is usually the AltGr (Alternate Graphics) key
!
!   Lastly, xmodmap allows you to remap any keycode to up to 6 keysyms,
!   depending on the modifier keys pressed (normal, Shift, Mode_Switch,
!   Shift+Mode_Switch, ISO_Level3_Shift, Shift+ISO_Level3_Shift).
!
!   The ISO_Level3_Shift is usually found on European keyboards and allow
!   access to Alternate Graphics through the AltGr key. The Mode_Switch can be
!   thought as a 'ISO_Level2_Shift'.
!
!   List of Keysyms
!   http://wiki.linuxquestions.org/wiki/List_of_Keysyms_Recognised_by_Xmodmap


!!!!! Clearing all modifiers
clear shift
clear control
clear lock
clear mod1
clear mod2
clear mod3
clear mod4
clear mod5

!!!!! Defining which keysym toggle which modifier
! Note that we did not define 'lock' here as we want to get rid of the Caps
! Lock once and for all
add shift   = Shift_L  Shift_R
add control = Control_L Control_R
add mod1    = Alt_L
add mod2    = Num_Lock
! add mod3    = Mode_switch
add mod4    = Super_L Hyper_L
add mod5    = ISO_Level3_Shift

!!!!!! Mapping Caps Lock to a custom key.
! Caps Lock is ‚á™
keycode 66 = U21EA

!!!!! Enter key
! Note that Shift-Enter and Ctrl-Enter are mapped in Kitty
keycode 36 = Return NoSymbol Return

! Space bar
! [{Space} {Zero-Width Space}]
! Note: Spacebar can only react to normal and shift press, not altgr press
! U200B is a zero-width space
keycode 65 = space U200B space U200B

! Legend:
! [{normal} {shift} {altgr} {altgr+shift}]
! XXX denotes an unused combination

! [& 1 ‚áà ‚áä]
keycode 10 = ampersand 1 ampersand 1 U21C8 U21CA
! [√© 2 ~ √â]
keycode 11 = eacute 2 eacute 2 asciitilde UC9
! [" 3 # ‚ô•]
keycode 12 = quotedbl 3 quotedbl 3 numbersign U2665
! [' 4 { XXX]
keycode 13 = apostrophe 4 apostrophe 4 braceleft
! [( 5 [ XXX]
keycode 14 = parenleft 5 parenleft 5 bracketleft
! [- 6 | ‚Äî]
keycode 15 = minus 6 minus 6 bar U2014
! [√® 7 ` √à]
keycode 16 = egrave 7 egrave 7 grave UC8
! [_ 8 \ ‚àû]
keycode 17 = underscore 8 underscore 8 backslash U221E
! [√ß 9 ^ √á]
keycode 18 = ccedilla 9 ccedilla 9 asciicircum UC7
! [√† 0 @ √Ä]
keycode 19 = agrave 0 agrave 0 at UC0
! [= + } ‚â†]
keycode 21 = equal plus equal plus braceright U2260

! [a A √¶ √Ü]
keycode 24 = a A a A ae AE
![z Z XXX XXX]
keycode 25 = z Z z Z
! [e E ‚Ç¨ XXX]
keycode 26 = e E e E EuroSign
! [r R ` ¬Æ]
keycode 27 = r R r R grave registered
! [t T ‚Ñ¢ XXX]
keycode 28 = t T t T trademark
! [y Y XXX XXX]
keycode 29 = y Y y Y
! [u U \ ¬µ]
keycode 30 = u U u U backslash U00B5
! [i I - ¬∑]
keycode 31 = i I i I minus U00B7
! [o O _ ≈ì]
keycode 32 = o O o O underscore oe
![p P XXX XXX]
keycode 33 = p P p P
![$ ¬£ ¬§ ¬•]
keycode 35 = dollar sterling dollar sterling currency yen
! [q Q ~ XXX]
keycode 38 = q Q q Q asciitilde
! [s S XXX XXX]
keycode 39 = s S s S
! [d D ‚òê ‚òë]
keycode 40 = d D d D U2610 U2611
! [f F üóé üóÄ]
keycode 41 = f F f F U1F5CE U1F5C0
! [g G XXX XXX]
keycode 42 = g G g G
! [h H # XXX]
keycode 43 = h H h H numbersign
! [j J | ‚ñÆ]
keycode 44 = j J j J bar U25AE
! [k K [ (]
keycode 45 = k K k K bracketleft parenleft
! [l L ] )]
keycode 46 = l L l L bracketright parenright
! [m M ‚ô™ ‚ô´]
keycode 47 = m M m M U266A U266B
! [√π % √∫ XXX]
keycode 48 = ugrave percent ugrave percent U00FA
! [* ¬µ ‚õÄ ‚õÇ]
keycode 51 = asterisk mu asterisk mu U26C0 U26C2
! [< > ‚ÄÆ{rtl override} ‚Ä≠{ltr override}]
! U202E is RTL override
! U202D is LTR override
keycode 94 = less greater less greater U202E U202D
! [w W XXX XXX]
keycode 52 = w W w W
! [x X ‚úó ‚úò]
keycode 53 = x X x X U2717 U2718
! [c C ¬© XXX]
keycode 54 = c C c C copyright
! [v V ‚úì ‚úî]
keycode 55 = v V v V U2713 U2714
! [b B XXX XXX]
keycode 56 = b B b B
! [n N ¬†{Non-Breaking Space} ‚ÄØ{Fine Non-Breaking Space}]
! UA0 is a non-breaking space
! U202F is a smaller non-breaking space
keycode 57 = n N n N UA0 U202F
! [, ? ‚ÄΩ ‚∏Æ]
keycode 58 = comma question comma question U203D U2E2E
! [; . ‚Ä¶ XXX]
keycode 59 = semicolon period semicolon period ellipsis
! [: / XXX XXX]
keycode  60 = colon slash colon slash
! [! ¬ß ‚ö† XXX]
keycode 61 = exclam section exclam section U26A0
