#!/usr/bin/env zsh
# This script is called by CtrlP when in a git repo.
# This will return the list of tracked files, excluding the one deleted in the
# working directory, but including the newly created files. This will also
# ignore files ignored by git as well as binary files defined in the ./noedit
# file.

local repoRoot=${1:a}
local noeditFile=${0:a:h}/noedit
local ctrlpIgnore=${repoRoot}/.ctrlpignore
local deletedFiles addedFiles lsFiles


# We get the full list of tracked files
cd $repoRoot
lsFiles=("${(@f)$(git ls-files)}")

# We then remove the list of deleted files from it
deletedFiles=("${(@f)$(git diff --name-only --diff-filter=D)}")
lsFiles=( "${lsFiles[@]/$deletedFiles}" )

# We then add the list of new files to it
addedFiles=("${(@f)$(git ls-files --others --exclude-standard)}")
lsFiles+=($addedFiles)

# We pipe the output to grep, to remove the binary files matching our pattern
local patterns="`(cat $ctrlpIgnore 2>/dev/null; cat $noeditFile) | grep -v -e '^#' -e '^$'`"
patterns=(${(@f)patterns})
local grepCommand="grep --ignore-case --invert-match --extended-regexp "
for pattern in $patterns; do
	grepCommand=${grepCommand}" -e '${pattern}'"
done

print -l $lsFiles | eval $grepCommand
