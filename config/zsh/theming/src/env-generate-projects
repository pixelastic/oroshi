#!/usr/bin/env zsh
# Creating PROJECT entries, for example:
# - PROJECT_ABERLAAS_NAME
# - PROJECT_ABERLAAS_PATH
# - PROJECT_ABERLAAS_ICON
# - PROJECT_ABERLAAS_BACKGROUND
# - PROJECT_ABERLAAS_BACKGROUND_HEXA
# - PROJECT_ABERLAAS_FOREGROUND
# - PROJECT_ABERLAAS_FOREGROUND_HEXA
# - PROJECT_ABERLAAS_HIDE_NAME_IN_PROMPT
local output=""

# This will load PROJECTS definitions. For example:
#
# - PROJECTS[aberlaas,background]="YELLOW_7"
# - PROJECTS[aberlaas,icon]="î‰£ "
# - PROJECTS[aberlaas,path]="~/local/www/projects/aberlaas/"
# - PROJECTS[aberlaas,foreground]="GRAY_9"
source ~/.oroshi/config/zsh/theming/src/projects-list.zsh

# We'll keep a list of all projects, and a list of all paths
# - PROJECTS_INDEX will contains an alphabetical list of all projects
# - PROJECTS_INDEX_BY_PATH will contains the same list, ordered by path
# For now, we gather them in an array, and we'll sort them one we have them
# all
local projectsIndex=()
declare -gA projectsIndexByPath
projectsIndexByPath=()

# Export PROJECT_{TYPE}_{KEY} environment variables:
for key value in "${(@kv)PROJECTS}"; do
  [[ $key != *,icon ]] && continue

  # Finding the values
  # Project name: aberlaas
  local projectName=${key%,*}
  # Capitalized project name: ABERLAAS
  local projectKey=${(U)projectName:gs/-/_/}
  # Background colors
  local backgroundColorName=$PROJECTS[${projectName},background]
  local backgroundColorTerm=${(P)${:-COLOR_${backgroundColorName}}}
  local backgroundColorHexa=${(P)${:-COLOR_${backgroundColorName}_HEXA}}
  # Foreground colors
  local foregroundColorName=$PROJECTS[${projectName},foreground]
  local foregroundColorTerm=${(P)${:-COLOR_${foregroundColorName}}}
  local foregroundColorHexa=${(P)${:-COLOR_${foregroundColorName}_HEXA}}
  # Icon
  local icon=$PROJECTS[${projectName},icon]
  # Path
  local projectPath=$PROJECTS[${projectName},path]
  # Should hide the name in prompt?
  local hideNameInPrompt=$PROJECTS[${projectName},hideNameInPrompt]
  [[ $hideNameInPrompt == "" ]] && hideNameInPrompt="0"

  # Creating PROJECT entries
  output+="export PROJECT_${projectKey}_NAME=\"$projectName\"\n"
  if [[ "$projectPath" != "" ]]; then
    output+="export PROJECT_${projectKey}_PATH=\"$projectPath\"\n"
  fi
  output+="export PROJECT_${projectKey}_ICON=\"$icon\"\n"
  output+="export PROJECT_${projectKey}_BACKGROUND=\"$backgroundColorTerm\"\n"
  output+="export PROJECT_${projectKey}_BACKGROUND_NAME=\"$backgroundColorName\"\n"
  output+="export PROJECT_${projectKey}_BACKGROUND_HEXA=\"$backgroundColorHexa\"\n"

  if [[ "$foregroundColorTerm" != "" ]]; then
    output+="export PROJECT_${projectKey}_FOREGROUND=\"$foregroundColorTerm\"\n"
    output+="export PROJECT_${projectKey}_FOREGROUND_NAME=\"$foregroundColorName\"\n"
    output+="export PROJECT_${projectKey}_FOREGROUND_HEXA=\"$foregroundColorHexa\"\n"
  fi

  output+="export PROJECT_${projectKey}_HIDE_NAME_IN_PROMPT=\"$hideNameInPrompt\"\n"

  # Building the indices
  projectsIndex+=($projectKey)
  if [[ $projectPath != "" ]]; then
    projectsIndexByPath[$projectPath]=$projectKey
  fi
done

# Alphabetical list of all projects
local PROJECTS_INDEX=""
for projectKey in ${(o)projectsIndex}; do
  PROJECTS_INDEX+=" $projectKey"
done
output+="export PROJECTS_INDEX=\"${PROJECTS_INDEX:1}\"\n"

# List of all projects, ordered by path, from specific to generic
local PROJECTS_INDEX_BY_PATH=""
for projectPath in ${(kO)projectsIndexByPath}; do
  local projectKey=$projectsIndexByPath[$projectPath]
  PROJECTS_INDEX_BY_PATH+=" $projectKey"
done
output+="export PROJECTS_INDEX_BY_PATH=\"${PROJECTS_INDEX_BY_PATH:1}\"\n"

# Generate the file
echo $output > ~/.oroshi/config/zsh/theming/env/projects.zsh
