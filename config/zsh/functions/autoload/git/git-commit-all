# Commit all changes
# Usage:
# $ git-commit-all                      # Commit all changes, and ask for message
# $ git-commit-all "Commit message"     # Commit all changes with message
# $ git-commit-all -n "Commit message"  # Can pass arguments to git commit
function git-commit-all() {
  local args=($@)

  # Find the commit message as the first argument without a dash as prefix
  local commitMessage=""
  local commitMessageIndex=""
  for ((argIndex=1; argIndex <= ${#args}; argIndex++)); do
    local argValue=$args[$argIndex]
    [[ $argValue = -* ]] && continue
    commitMessage=$argValue
    args[$argIndex]=()
  done

  # If a commit message is passed, we add it to the args
  if [[ $commitMessage != "" ]]; then
    args+=("--message")
    args+=($commitMessage)
  fi

  # We always make it verbose
  args+=("--verbose")

  # Commit all files
  git add --all
  git commit ${args}
}
