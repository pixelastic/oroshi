# Displays a colorized version of a tag name
# Usage:
# $ git-tag-colorize                    # {currentTag}
# $ git-tag-colorize main               # v1.0
# $ git-tag-colorize --with-icon        #  v1.0
function git-tag-colorize() {
	zparseopts -E -D \
		-with-icon=flagWithIcon

	local isWithIcon=${#flagWithIcon}

	local currentTag="$(git-tag-current)"

	# Tag name
	local tagName="$1"
	# Use the closest tag if none is passed
	if [[ $tagName == '' ]]; then
		tagName="$currentTag"
	fi
	# Stop if still no tag found
	if [[ $tagName == '' ]]; then
		return 0
	fi

	# If --with-icon is not passed, we simply display the colored tag
	if [[ "$isWithIcon" != 1 ]]; then
		colorize "$tagName" $COLOR_ALIAS_GIT_TAG
		return
	fi

	local tagStatus="$(git-tag-status "$tagName")"

	# Exact: The tag points specifically to the current commit
	if [[ "$tagStatus" = "exact" ]]; then
		colorize " $tagName" $COLOR_ALIAS_GIT_TAG_EXACT
		return
	fi

	# Closest: The tag is the closest in the branch
	if [[ "$tagStatus" = "closest" ]]; then
		colorize " $tagName" $COLOR_ALIAS_GIT_TAG_CLOSEST
		return
	fi

	# Parent: The tag is somewhere in the branch
	if [[ "$tagStatus" = "parent" ]]; then
		colorize " $tagName" $COLOR_ALIAS_GIT_TAG_PARENT
		return
	fi

	# Unrelated: The tag is not in the branch
	if [[ "$tagStatus" = "unrelated" ]]; then
		colorize " $tagName" $COLOR_ALIAS_GIT_TAG_UNRELATED
		return
	fi

	# Fallback on unknown status
	colorize " $tagName" $COLOR_ALIAS_ERROR
	return
}
