# Sort a list of filepath, from the closest to the furthest
#
# Usage:
# $ echo "here\n../far\n../../even-further" | sort-filepath
# $ sort-filepath "here\n../far" "../../even-further"

function sort-filepaths() {
  # Get input from stdin, or as arguments
  if [[ -p /dev/stdin ]]; then
    local unsortedFilepaths=($(cat -))
  else
    local unsortedFilepaths=()
    for arg in $@; do
      unsortedFilepaths+=(${(@s/\n/)arg})
    done
  fi

  local weightedFilepaths=()

  # Add weighted prefix before each entry
  for filepath in $unsortedFilepaths; do
    # We count the number of slash as a mesure of the distance
    local slashCount=${#${filepath//[^\/]}}
    # We weight those in directories above as further than those in directories
    # down
    if [[ $filepath == ../* ]]; then
      weightedFilepaths+=("1${slashCount} $filepath")
    else
      weightedFilepaths+=("0${slashCount} $filepath")
    fi
  done

  # Display only the filepath, and not the weight
  for filepath in ${(o)weightedFilepaths}; do
    echo ${${=filepath}[2]}
  done
}
