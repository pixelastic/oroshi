# Writes on disk a list of all packages to populate the fzf search
# This will help speed up the search, as the list takes ~5s to generate
function fzf-packages-apt-source-generate() {

  local allPackages="$(apt-list)"

  # Make an inverted list out of the list of installed packages
  local installedPackagesList="$(apt list --installed 2>/dev/null | tail -n +2)"
  declare -A installedPackages
  local installedPackages=()
  for line in ${(f)installedPackagesList}; do
    local lineArray=(${=line})

    # zsh/jammy,now => zsh
    local packageName=$lineArray[1]
    packageName=${${(@s:/:)packageName}[1]}

    # 2:1.2.3-build12+git123 => 1.2.3
    local packageVersion=$lineArray[2]
    [[ $packageVersion == *:* ]] && packageVersion=${${(@s/:/)packageVersion}[2]}
    [[ $packageVersion == *+* ]] && packageVersion=${${(@s/+/)packageVersion}[1]}
    [[ $packageVersion == *-* ]] && packageVersion=${${(@s/-/)packageVersion}[1]}

    installedPackages[$packageName]=$packageVersion
  done

  # Generate the list to chose from
  local output=()
  local outputInstalled=()
  for packageName in ${(f)allPackages}; do
    local packageVersion=$installedPackages[$packageName]

    # We display the package name with padded spaces, to align the version
    local packageDisplayName=${(r(40)( ))packageName}
    local packageDisplayVersion=$packageVersion
    
    # Color the name if installed
    if [[ $packageVersion != "" ]]; then
      packageDisplayName="[38;5;${COLOR_ALIAS_PACKAGE_INSTALLED}m${packageDisplayName}[00m"
      packageDisplayVersion="[38;5;${COLOR_ALIAS_PACKAGE_INSTALLED}m${packageDisplayVersion}[00m"
    fi

    # First column will be selected
    # Second column will be displayed and searched
    local displayedLine="$packageNameâ–®$packageDisplayName $packageDisplayVersion"
    output+=("$displayedLine")

    # Also add it to the list of installed softwares
    [[ $packageVersion != "" ]] && outputInstalled+=("$displayedLine")

  done

  # Write the file to disk
  local cacheDestination=/tmp/oroshi/fzf/packages-apt
  local cacheInstalledDestination=/tmp/oroshi/fzf/packages-apt-installed

  mkdir -p ${cacheDestination:a:h}
  echo "${(F)output}" > $cacheDestination
  echo "${(F)outputInstalled}" > $cacheInstalledDestination
}
