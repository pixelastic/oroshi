# Unlink a linked module from the current project
# Note: This only works with Yarn Classic (v1)
# Usage:
# $ yarn-link-classic-disable reddinx         # Unlinks reddinx from the current project
# $ yarn-link-classic-disable reddinx firost  # Unlinks reddinx and firost
function yarn-link-classic-disable() {
	# Stop if not using yarn classic
	if yarn-version-is-berry; then
		echo "⚠ This function is not supported in yarn Berry"
		echo "Yarn Berry (2+) does not have a concept of registered list of modules to link"
		return 1
	fi

	local linkNames=($@)
	# If no module passed, we remove the current one
	if [[ $linkNames == "" ]]; then
		echo "⚠ You need to pass at least one package to link"
		return 1
	fi

	# Module unlinking only works from the project root
	local projectRoot="$(yarn-root)"
	cd $projectRoot || return

	# Iterate through all links to disnable
	for linkName in $linkNames; do
		# Skip if the link is not actually enabled
		! yarn-link-exists $linkName && continue

		# Unlink it
		yarn unlink $linkName 1>/dev/null
		echo "✘ ${linkName} unlinked"
	done
}
