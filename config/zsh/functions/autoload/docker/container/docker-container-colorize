# Displays a colorized version of a container name
# Usage:
# $ docker-container-colorize alpine_latest                             # alpine_latest
# $ docker-container-colorize alpine_latest --with-icon                 #  alpine
# $ docker-container-colorize alpine_latest --with-icon --state stopped #  alpine
# $ docker-container-colorize alpine_latest --with-icon --state running #  alpine
function docker-container-colorize() {
	zparseopts -E -D \
		-with-icon=flagWithIcon \
		-state:=flagState

	# shellcheck disable=SC2154
	{
		local isWithIcon=${#flagWithIcon}
		local state=${flagState[2]}
	}

	# Split container name and its tag
	local containerName=$1

	# Container color {{{
	local containerColor=$COLOR_ALIAS_DOCKER_CONTAINER
	[[ $state == "running" ]] && containerColor=$COLOR_ALIAS_DOCKER_CONTAINER_RUNNING
	[[ $state == "exited" ]] && containerColor=$COLOR_GRAY
	# }}}

	# If --with-icon is not passed, we simply display the colored container
	if [[ "$isWithIcon" != 1 ]]; then
		colorize "${containerName}" $containerColor
		return
	fi

	# If --with-icon is passed, we display a different icon based on if the container
	# is local or remote
	local containerIcon=" "
	[[ $state == "running" ]] && containerIcon=" "
	[[ $state == "exited" ]] && containerIcon=" "

	colorize "${containerIcon}${containerName}" $containerColor
}
