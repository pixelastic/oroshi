#!/usr/bin/env zsh
# [d]ocker [i]mage [r]un
# Creates a container from an image and run it
#
# Usage:
#   - dir => Run current Dockerfile
#   - dir [command] => Run current Dockerfile with specific command
#   - dir [imageName] => Run existing image
#   - dir [imageName] [command] => Run existing image with specific command
#   - dir --force => Rebuild the image

# PARSE ARGUMENTS
# We first check for all --named arguments. We keep the other ones to build the
# ARGS variable
isForcedBuild=0
ARGS=()
while [[ "$#" -gt 0 ]]; do
  arg=$1
  case "$arg" in
    # Force a rebuild
    --force) isForcedBuild=1 ;;

    # Any other key is passed to the args
    *) ARGS=("${ARGS[@]}" "$arg"); ;;
  esac
  shift
done

# DEFAULT ARGUMENTS
imageName="${ARGS[1]}"
commandParts=(${ARGS[@]:1})

# IMAGE NAME
# If the first argument is not an image, then we use the current folder for the
# image, and the first argument is part of the command
if ! di-exists "$imageName"; then
  commandParts=("$imageName" "${commandParts[@]}")
  imageName=""
fi

# FORCE BUILD
# If --force is passed, we rebuild the image before running it
if [[ $isForcedBuild == 1 ]]; then
  dib --force --name="$imageName"
fi

# IMAGE DETECTION
# If no image is specified, we use the image of the current directory
if [[ $imageName == "" ]]; then
  imageName=$(path.basename .)
  # If the image do not exist, we build it
  if ! di-exists $imageName; then
    dib --name="$imageName"
  fi
fi

# CUSTOM COMMAND
# Any unnamed argument passed to the command will overwrite the default command.
# Note that for command requiring arguments, the arguments must be passed AFTER
# the image name.
# Example for running the image debian with "uname -a"
# docker run --entrypoint="uname" debian -a
commandEntrypoint=""
commandArgs=""
# If a custom command is specified, it overwrites the default image command
if [ ! ${#commandParts[@]} -eq 0 ]; then
  commandEntrypoint="--entrypoint=${commandParts[1]}"
  commandArgs=${commandParts:1}
fi

# RUN THE CONTAINER
# We create a container from the specified image and run it
# We will remove it after it's done running
docker run \
  --rm \
  --interactive \
  --tty \
  $commandEntrypoint \
  $imageName \
  $commandArgs
