#!/usr/bin/env ruby
require_relative '../etc/gem-helper/gem-helper'

# Find all gems matching the given pattern
class GemSearch
  include GemHelper

  def initialize(keyword)
    @search_list = search(keyword)
  end

  def search(keyword)
    raw = `gem search #{keyword} --verbose`
    results = []
    pattern = /(.*) \((.*)\)$/
    raw.each_line do |line|
      next unless line =~ pattern
      name, version = line.chomp.match(pattern).captures

      results << {
        name: name,
        remote_version: version
      }
    end

    results.sort_by { |result| result[:name] }
  end

  def run
    longest_name = longest_by_type(@search_list, :name)

    @search_list.each do |result|
      padded_name = result[:name].ljust(longest_name.size)
      line = []

      if installed?(result[:name])
        line << colorize("âœ” #{padded_name} ", :success)
        line << colorize(get_version(result[:name]), :version)
      else
        line << "  #{padded_name} "
        line << colorize(result[:remote_version], :version)
      end
      puts line.join('')
    end
  end
end
GemSearch.new(*ARGV).run
