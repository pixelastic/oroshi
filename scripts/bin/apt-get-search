#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../etc/apt-get-helper/apt-get-helper'

# Find all packages matching the keyword given
class AptGetSearch
  include AptGetHelper

  def initialize(keyword)
    @search_list = search(keyword)
  end

  def search(keyword)
    raw = `apt-cache search --names-only --full #{keyword}`
    packages = raw.split("\n\n")

    results = []
    packages.each do |package|
      name = package.match(/^Package: (?<name>.*)$/)[:name]
      version = package.match(/^Version: (?<name>.*)$/)[:name]
      current_version = get_current_version(name)
      results << {
        name: name,
        version: version,
        current_version: current_version
      }
    end
    results.sort_by { |result| result[:name] }
  end

  def run
    return if @search_list.empty?

    width = longest_by_type(@search_list, :name).size

    @search_list.each do |result|
      version = result[:version]
      current_version = result[:current_version]
      name = result[:name]

      # Package name
      name = name.ljust(width)
      package_color = current_version ? :package_installed : :package_uninstalled
      name = colorize(name, package_color)

      # Version
      if current_version
        if current_version != version
          display_current_version = colorize(current_version, :version_mismatch)
          display_remote_version = colorize(version, :version_uninstalled)
          display_version = "#{display_current_version} / #{display_remote_version}"
        else
          display_version = colorize(version, :version_installed)
        end
      else
        display_version = colorize(version, :version_uninstalled)
      end

      puts "#{name}     #{display_version}"
    end
  end
end
AptGetSearch.new(*ARGV).run
