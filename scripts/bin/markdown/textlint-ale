#!/usr/bin/env zsh
# Wrapper of textlint to be used by ALE in vim
# Usage:
# $ textlint-ale \
#   -f json \
#   --stdin \
#   --stdin-filename '/path/to/original/file.md' \
#   < '/path/to/tmp/file.md'
#
# textlint reads it config from .textlinrc files, recursively up the tree. There
# doesn't seem to have a way to define a textlintrc file to use specifically, so
# we'll move our file to a directory where the file is present and run it from
# there
set -e

# We get the name of the original file from --stdin-filename
zparseopts -E -D \
	-stdin-filename:=flagStdinFilename
local stdinFilename=${flagStdinFilename[2]}

if [[ $stdinFilename == "" ]]; then
	exit 1
fi

local iroriFolder=~/local/www/projects/irori

# Create the sandbox folder
local sandbox=/tmp/oroshi/textlint
mkdir -p $sandbox

# Add the config
local textlintrcPath="${iroriFolder}/lib/configs/textlintrc.js"
ln -fs $textlintrcPath "${sandbox}/.textlintrc.js"
local terminologyPath="${iroriFolder}/lib/configs/terminology.json"
ln -fs $terminologyPath ${sandbox}

# Copy the source file here
local uuid="$(md5 ${stdinFilename})"
local tmpFilepath="${sandbox}/${uuid}.md"
cp $stdinFilename $tmpFilepath

# Run textlint on it
cd $sandbox
local textlintBin="${iroriFolder}/node_modules/.bin/textlint"
${textlintBin} -f json --stdin --stdin-filename "$stdinFilename" <$tmpFilepath

# Cleanup once done
rm $tmpFilepath
