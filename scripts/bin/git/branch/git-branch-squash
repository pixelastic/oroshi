#!/usr/bin/env zsh
# Squash all commits of the current branch together
# It will create a new commit with a text message set as the sum of all commits
#
# Usage :
# $ git-branch-squash                 # Squash from the latest fork
# $ git-branch-squash develop         # Squash from develop
# $ git-branch-squash abcdef          # Squash from commit abcdef

set -e

local commitHash=$1
# If no commit hash provided, we squash from the branch closest parent
[[ $commitHash == '' ]] && commitHash="$(git-branch-parent)"

# Stop if no such commit
if ! git-commit-exists $commitHash; then
  echo "Commit $commitHash does not exist"
  exit 1
fi

# Gather all commit messages since then
local tmpCommitMessagePath=/tmp/vit_git-branch-squash-commitmsg
# First, the main commit message being the branch name
echo "$commitHash\n\n" > $tmpCommitMessagePath
# Now, the core of the message being all the commits
git log --format=%B --reverse ${commitHash}... \
  >> $tmpCommitMessagePath

# Cancel all commits
git reset --soft $commitHash

# Commit them in one commit
git commit --edit -F $tmpCommitMessagePath
