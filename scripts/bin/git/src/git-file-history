#!/usr/bin/env zsh
# Display an interactive list of all previous versions of the file
# Usage:
# $ git-file-history ./path/to/file

local relativePath="$1"
local absolutePath="${relativePath:a}"
local gitPath="$(git-file-path "$absolutePath")"

# Build the display line
local formatString=""
formatString+="%C(${COLOR_ALIAS_GIT_COMMIT}) %h%Creset  "
formatString+="%C(${COLOR_ALIAS_DATE}) %cd%Creset  "
formatString+="%C(${COLOR_ALIAS_GIT_MESSAGE})%s%Creset"

# Find all commits where this file was modified
local gitHistory="$(\
git \
  --no-pager \
  log \
  --date=format:'%Y-%m-%d %H:%M:%S' \
  --format="$formatString" \
  --color=always \
  $absolutePath \
)"

# Open dynamic search in the list, along with a preview of the file
local selection="$(
  fzf \
    --ansi \
    --preview-window 'right,50%,border-left,<79(bottom,80%,border-top)' \
    --preview "git-file-history-preview {} "$gitPath"" \
    <<< "$gitHistory"
)"

# Stop if no selection
[[ "$selection" == "" ]] && exit 1

# Find the commit
local commitHash="$(cut -d ' ' -f2 <<< "$selection")"

# Create a new version on disk of that version
local dirname="${absolutePath:r}"
local extension="${absolutePath:e}"
local newFilepath="${dirname}.${commitHash}.${extension}"
git show $commitHash:"$gitPath" > $newFilepath

