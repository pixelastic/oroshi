#!/usr/bin/env zsh
# Display the list of commits, as a graph
# Usage:
# $ git-commit-list
# $ git-commit-list --more
# $ git-commit-list --all

zparseopts -E -D \
  -more=flagMore \
  -all=flagAll \

local isMore=${#flagMore}
local isAll=${#flagAll}

local prettyFormat=(\
  # Commit hash
  "[38;5;${COLOR_ALIAS_GIT_COMMIT}mÔêó %<(10)%h[00m" \
  # Date
  "[38;5;${COLOR_ALIAS_DATE}mÔÄó %cd, %<(25)%ar[00m" \
  # Author name
  "[38;5;${COLOR_ALIAS_GIT_AUTHOR}mÔêï %an[00m" \
  # Branches and tags, but only if non-empty
  # Color of %C(auto) are defined in gitconfig
  # The %+D adds a new line before the line, only if not empty
  "%C(auto)%+D%Creset" \
  # Commit message, spaced out
  "%n[38;5;${COLOR_ALIAS_GIT_MESSAGE}m%s[00m%n" \
)

local additionalFlags=()
# --stat: Display list of changed files
[[ $isMore == "1" ]] && additionalFlags+=(--stat)
# --patch: Display full diff
[[ $isAll == "1" ]] && additionalFlags+=(--patch)

git log \
  --graph \
  --date=format:'%Y-%m-%d %H:%M' \
  --pretty=format:"${(j::)prettyFormat}" \
  ${=additionalFlags}
