#!/usr/bin/env zsh
# Remove a submodule from a repo
# Usage:
# $ git-submodule-remove ./path/to/submodule # Removes the submodule
# $ git-submodule-remove ./one ./two         # Removes multiple submodules

cd "$(git-directory-root)" || exit 0

for submoduleName in $@; do
	local absolutePath="${submoduleName:a}"

	# Skip missing directories
	if [[ ! -d $absolutePath ]]; then
		echo "✘ ${absolutePath} does not exist"
		continue
	fi
	# Skip non-submodules
	if ! git-is-submodule $absolutePath; then
		echo "✘ ${submoduleName} is not a submodule"
		continue
	fi

	# Tell git to stop tracking the files
	git rm --quiet $absolutePath

	# Remove the submodule from the config
	git config \
		--file .git/config \
		--remove-section "submodule.${submoduleName}"

	# Delete the .git/modules cache
	rm -rf .git/modules/${submoduleName}

	echo "✔ $submoduleName deleted"
done
