#!/usr/bin/env ruby
require 'shellwords'
require 'tempfile'
require 'fileutils'

# Extract the part of a video between {start} and {end}
# $ video-split input.mp4 '00:00:10-00:00:15'
# $ video-split input.mp4 '00:00:10-'
# $ video-split input.mp4 '-00:00:15'
# $ video-split input.mp4 '00:00:10-00:00:15' output.mp4
# $ video-split input.mp4 '00:00:10-' output.mp4
class VideoSplit
  def initialize(*args)
    @input = args[0]

    if args.size < 2
      puts 'Usage:'
      puts "$ video-split ./video.mp4 '00:10:00-00:20:00' {output.mp4}"
      exit 0
    end

    @from, @to = args[1].split('-')

    @output = args[2]
    if @output.nil?
      @input = @input.shellescape
      extname = File.extname(@input)
      basename = File.basename(@input, extname)
      @output = "#{basename}_#{@from}_#{@to}#{extname}".tr(':', '_')
    end
    dirname = File.expand_path(File.dirname(@input))
    @output = File.join(dirname, @output)
  end

  # Extract a chunk of file
  def extract_chunk(input, from, to, output)
    options = []
    # options << '-loglevel panic'
    # We add the -ss before the -i, so it performs a fast-seek up to this frame
    options << "-ss #{from}"
    options << "-i #{input.shellescape}"
    # We then extract up to -to. We need to pass -copyts, otherwise the
    # timestamps are reset to zero because of the fast seek
    options << "-to #{to}"
    options << '-c copy'
    options << '-copyts'

    options << '-async 1'
    options << output.shellescape
    p options
    process.exit 1
    # system("ffmpeg #{options.join(' ')}")
  end

  def fix_frames(input, output)
    input_ext = File.extname(input)
    input_dir = File.dirname(input)
    input_base = File.basename(input, input_ext)
    tmp_avi = "#{input_dir}/#{input_base}.avi"
    output_ext = File.extname(output)
    output_dir = File.dirname(output)
    output_base = File.basename(output, output_ext)
    output_path = "#{output_dir}/#{output_base}.mp4"

    # We convert to avi first, to fix the keyframes
    options = [
      # '-loglevel panic',
      "-i #{input.shellescape}",
      '-c copy',
      tmp_avi.shellescape
    ]
    system("ffmpeg #{options.join(' ')}")
    FileUtils.rm(input)

    # We convert then to mp4
    options = [
      '-loglevel panic',
      "-i #{tmp_avi.shellescape}",
      '-c copy',
      '-crf 23',
      output_path.shellescape
    ]
    system("ffmpeg #{options.join(' ')}")
    FileUtils.rm(tmp_avi)
  end

  def run
    ext = File.extname(@input)
    tmp_file = Tempfile.new('video-split-chunk')
    tmp_chunk_path = "#{tmp_file.path}#{ext}"

    extract_chunk(@input, @from, @to, tmp_chunk_path)
    fix_frames(tmp_chunk_path, @output)
  end
end
VideoSplit.new(*ARGV).run
