#!/usr/bin/env ruby
require_relative '../etc/docker-helper/docker_helper'

# Start a new container from an image
class DockerContainerCreate
  include DockerHelper

  def initialize(*args)
    @force = false

    # Used to force creating even if an image already exists with this name
    if args.include?('--force')
      args.delete('--force')
      @force = true
    end

    @image_name = args[0]
    @container_name = args[1]

    if @image_name.nil? || @container_name.nil?
      puts 'Usage:'
      puts '$ docker-container-create image_name container_name'
      exit 1
    end

    if container?(@container_name) && !@force
      puts "âœ˜ The container named #{colorize(@container_name, :container)} already exists"
      puts 'Add --force to overwrite'
      exit 1
    end

    @other_args = args[2..-1].join(' ')
  end

  def run
    # We remove the container before adding it if --force is passed
    container_remove(@container_name) if @force && container?(@container_name)

    options = [
      'docker',
      'run',
      "--name #{@container_name}",
      @other_args,
      @image_name
    ].compact

    IO.popen(options.join(' ')).each do |line|
      puts line.chomp
    end
  end
end
DockerContainerCreate.new(*ARGV).run
